# Prosper Loan Data Analysis
Abhik Sarkar

## Introduction
This dataset is financial dataset and this is related to the loan, borrowers, lenders, interest rates and stuffs like that. Prosper or [Prosper Marketplace Inc.](https://www.prosper.com/) is a San Francisco, California based company specializing in loans at low interest rates to the borrowers. In this dataset, we are using the data from the Prosper to analyse it and trying to find the pattern in the Prosper data. It was tedious task to analyse this data given the size. 
To simplify the approach we only took a subset of data which cointained Prosper Ratings. For plotting purpose we used pythons **Seaborn** library and **Matplotlib** library.

The dataset is comprised of 81 variables and contains 113937 entries. The variable that are explored in the dataset are the following 

**Term** : Amount of month customers opted for loan

**LoanStatus** : Current status of the loan like chargedoff, completed, defauted etc...

**EstimatedEffectiveYield** : Yield of lenders from borrowers minus the processing fee and late fines

**ProsperScore** : Risk Factor score from 1 to 10. 10 being least risky

**BorrowerAPR** : The Borrower's Annual Percentage Rate (APR) for the loan.

**BorrowerRate** : The Borrower's interest rate for this loan.

**ListingCategory..numeric.** : Prosper rating for borrowers in numbers

**EmploymentStatus** : Current type of employment

**Occupation** : Occupation of borrower at the time of listing

**EmploymentStatusDuration** : How long the employee has been employed

**IsBorrowerHomeowner** : Does the borrower owns house at the time of listing (True & False)

**ProsperRating..Alpha.** : Prosper rating for borrowers in alphabets

**IncomeVerifiable** : If the income of the borrower is verifiable at the time of listing (True & False)

**StatedMonthlyIncome** : Monthly income of the borrower

**MonthlyLoanPayment** : Monthly loan payment amount

**Recommendations** : Recommendations the borrowers has at the time of listing

**DebtToIncomeRatio** : The debt to income ratio of the borrower at the time the credit profile was pulled.

**LoanOriginalAmount** : Original amount of the loan

**LoanOriginationQuarter** : Quarter of the month when loan was originated

A basic exploration of the datset would give the following information

```
 'data.frame':	113937 obs. of  81 variables:
  $ ListingKey                         : Factor w/ 113066 levels "00003546482094282EF90E5",..: 7180 7193 6647 6669 6686 6689 6699 6706 6687 6687 ...
  $ ListingNumber                      : int  193129 1209647 81716 658116 909464 1074836 750899 768193 1023355 1023355 ...
  $ ListingCreationDate                : Factor w/ 113064 levels "2005-11-09 20:44:28.847000000",..: 14184 111894 6429 64760 85967 100310 72556 74019 97834 97834 ...
  $ CreditGrade                        : Factor w/ 9 levels "","A","AA","B",..: 5 1 8 1 1 1 1 1 1 1 ...
  $ Term                               : int  36 36 36 36 36 60 36 36 36 36 ...
  $ LoanStatus                         : Factor w/ 12 levels "Cancelled","Chargedoff",..: 3 4 3 4 4 4 4 4 4 4 ...
  $ ClosedDate                         : Factor w/ 2803 levels "","2005-11-25 00:00:00",..: 1138 1 1263 1 1 1 1 1 1 1 ...
  $ BorrowerAPR                        : num  0.165 0.12 0.283 0.125 0.246 ...
  $ BorrowerRate                       : num  0.158 0.092 0.275 0.0974 0.2085 ...
  $ LenderYield                        : num  0.138 0.082 0.24 0.0874 0.1985 ...
  $ EstimatedEffectiveYield            : num  NA 0.0796 NA 0.0849 0.1832 ...
  $ EstimatedLoss                      : num  NA 0.0249 NA 0.0249 0.0925 ...
  $ EstimatedReturn                    : num  NA 0.0547 NA 0.06 0.0907 ...
  $ ProsperRating..numeric.            : int  NA 6 NA 6 3 5 2 4 7 7 ...
  $ ProsperRating..Alpha.              : Factor w/ 8 levels "","A","AA","B",..: 1 2 1 2 6 4 7 5 3 3 ...
  $ ProsperScore                       : num  NA 7 NA 9 4 10 2 4 9 11 ...
  $ ListingCategory..numeric.          : int  0 2 0 16 2 1 1 2 7 7 ...
  $ BorrowerState                      : Factor w/ 52 levels "","AK","AL","AR",..: 7 7 12 12 25 34 18 6 16 16 ...
  $ Occupation                         : Factor w/ 68 levels "","Accountant/CPA",..: 37 43 37 52 21 43 50 29 24 24 ...
  $ EmploymentStatus                   : Factor w/ 9 levels "","Employed",..: 9 2 4 2 2 2 2 2 2 2 ...
  $ EmploymentStatusDuration           : int  2 44 NA 113 44 82 172 103 269 269 ...
  $ IsBorrowerHomeowner                : Factor w/ 2 levels "False","True": 2 1 1 2 2 2 1 1 2 2 ...
  $ CurrentlyInGroup                   : Factor w/ 2 levels "False","True": 2 1 2 1 1 1 1 1 1 1 ...
  $ GroupKey                           : Factor w/ 707 levels "","00343376901312423168731",..: 1 1 335 1 1 1 1 1 1 1 ...
  $ DateCreditPulled                   : Factor w/ 112992 levels "2005-11-09 00:30:04.487000000",..: 14347 111883 6446 64724 85857 100382 72500 73937 97888 97888 ...
  $ CreditScoreRangeLower              : int  640 680 480 800 680 740 680 700 820 820 ...
  $ CreditScoreRangeUpper              : int  659 699 499 819 699 759 699 719 839 839 ...
  $ FirstRecordedCreditLine            : Factor w/ 11586 levels "","1947-08-24 00:00:00",..: 8639 6617 8927 2247 9498 497 8265 7685 5543 5543 ...
  $ CurrentCreditLines                 : int  5 14 NA 5 19 21 10 6 17 17 ...
  $ OpenCreditLines                    : int  4 14 NA 5 19 17 7 6 16 16 ...
  $ TotalCreditLinespast7years         : int  12 29 3 29 49 49 20 10 32 32 ...
  $ OpenRevolvingAccounts              : int  1 13 0 7 6 13 6 5 12 12 ...
  $ OpenRevolvingMonthlyPayment        : num  24 389 0 115 220 1410 214 101 219 219 ...
  $ InquiriesLast6Months               : int  3 3 0 0 1 0 0 3 1 1 ...
  $ TotalInquiries                     : num  3 5 1 1 9 2 0 16 6 6 ...
  $ CurrentDelinquencies               : int  2 0 1 4 0 0 0 0 0 0 ...
  $ AmountDelinquent                   : num  472 0 NA 10056 0 ...
  $ DelinquenciesLast7Years            : int  4 0 0 14 0 0 0 0 0 0 ...
  $ PublicRecordsLast10Years           : int  0 1 0 0 0 0 0 1 0 0 ...
  $ PublicRecordsLast12Months          : int  0 0 NA 0 0 0 0 0 0 0 ...
  $ RevolvingCreditBalance             : num  0 3989 NA 1444 6193 ...
  $ BankcardUtilization                : num  0 0.21 NA 0.04 0.81 0.39 0.72 0.13 0.11 0.11 ...
  $ AvailableBankcardCredit            : num  1500 10266 NA 30754 695 ...
  $ TotalTrades                        : num  11 29 NA 26 39 47 16 10 29 29 ...
  $ TradesNeverDelinquent..percentage. : num  0.81 1 NA 0.76 0.95 1 0.68 0.8 1 1 ...
  $ TradesOpenedLast6Months            : num  0 2 NA 0 2 0 0 0 1 1 ...
  $ DebtToIncomeRatio                  : num  0.17 0.18 0.06 0.15 0.26 0.36 0.27 0.24 0.25 0.25 ...
  $ IncomeRange                        : Factor w/ 8 levels "$0","$1-24,999",..: 4 5 7 4 3 3 4 4 4 4 ...
  $ IncomeVerifiable                   : Factor w/ 2 levels "False","True": 2 2 2 2 2 2 2 2 2 2 ...
  $ StatedMonthlyIncome                : num  3083 6125 2083 2875 9583 ...
  $ LoanKey                            : Factor w/ 113066 levels "00003683605746079487FF7",..: 100337 69837 46303 70776 71387 86505 91250 5425 908 908 ...
  $ TotalProsperLoans                  : int  NA NA NA NA 1 NA NA NA NA NA ...
  $ TotalProsperPaymentsBilled         : int  NA NA NA NA 11 NA NA NA NA NA ...
  $ OnTimeProsperPayments              : int  NA NA NA NA 11 NA NA NA NA NA ...
  $ ProsperPaymentsLessThanOneMonthLate: int  NA NA NA NA 0 NA NA NA NA NA ...
  $ ProsperPaymentsOneMonthPlusLate    : int  NA NA NA NA 0 NA NA NA NA NA ...
  $ ProsperPrincipalBorrowed           : num  NA NA NA NA 11000 NA NA NA NA NA ...
  $ ProsperPrincipalOutstanding        : num  NA NA NA NA 9948 ...
  $ ScorexChangeAtTimeOfListing        : int  NA NA NA NA NA NA NA NA NA NA ...
  $ LoanCurrentDaysDelinquent          : int  0 0 0 0 0 0 0 0 0 0 ...
  $ LoanFirstDefaultedCycleNumber      : int  NA NA NA NA NA NA NA NA NA NA ...
  $ LoanMonthsSinceOrigination         : int  78 0 86 16 6 3 11 10 3 3 ...
  $ LoanNumber                         : int  19141 134815 6466 77296 102670 123257 88353 90051 121268 121268 ...
  $ LoanOriginalAmount                 : int  9425 10000 3001 10000 15000 15000 3000 10000 10000 10000 ...
  $ LoanOriginationDate                : Factor w/ 1873 levels "2005-11-15 00:00:00",..: 426 1866 260 1535 1757 1821 1649 1666 1813 1813 ...
  $ LoanOriginationQuarter             : Factor w/ 33 levels "Q1 2006","Q1 2007",..: 18 8 2 32 24 33 16 16 33 33 ...
  $ MemberKey                          : Factor w/ 90831 levels "00003397697413387CAF966",..: 11071 10302 33781 54939 19465 48037 60448 40951 26129 26129 ...
  $ MonthlyLoanPayment                 : num  330 319 123 321 564 ...
  $ LP_CustomerPayments                : num  11396 0 4187 5143 2820 ...
  $ LP_CustomerPrincipalPayments       : num  9425 0 3001 4091 1563 ...
  $ LP_InterestandFees                 : num  1971 0 1186 1052 1257 ...
  $ LP_ServiceFees                     : num  -133.2 0 -24.2 -108 -60.3 ...
  $ LP_CollectionFees                  : num  0 0 0 0 0 0 0 0 0 0 ...
  $ LP_GrossPrincipalLoss              : num  0 0 0 0 0 0 0 0 0 0 ...
  $ LP_NetPrincipalLoss                : num  0 0 0 0 0 0 0 0 0 0 ...
  $ LP_NonPrincipalRecoverypayments    : num  0 0 0 0 0 0 0 0 0 0 ...
  $ PercentFunded                      : num  1 1 1 1 1 1 1 1 1 1 ...
  $ Recommendations                    : int  0 0 0 0 0 0 0 0 0 0 ...
  $ InvestmentFromFriendsCount         : int  0 0 0 0 0 0 0 0 0 0 ...
  $ InvestmentFromFriendsAmount        : num  0 0 0 0 0 0 0 0 0 0 ...
  $ Investors                          : int  258 1 41 158 20 1 1 1 1 1 ...
```

## Question.
How to identify the defaulters beforehand?

In this investigation, I wanted to look at the characteristics of defaulter that could be used to predict defaulters beforehand

## Conclusions

Following important points came up after the investigation
 
    - 60 Months Loans are most likely to be defaulted.
    - 'Other' Employee Status is the most unsafe status for loan.
    - People having lower salary are most likely to be a defaulter.
    - Loans having 5-20 investors are most likely to be defaulted.
    - High lender yield tends to get defaulted more often than the lower ones.
    - Bankcard credit and home loan have no significant contribution in prediciting wether the loans will be deafulted or not.
    - 36 Months terms take the most Borrow Rate.
    - With increasing prosper rating higher valued loans can be taken.

## Limitations

The Exploratory Data Analysis is a good way to know the data using vivid and interesting visualizations. However, to make final statement about the  relationships among variables we need to conduct statistical test and  build predictive models.



